{
  "Name": "general",
  "PodsDestroyed": 1,
  "ScenariosAttempted": 4,
  "ScenariosSucceeded": 3,
  "ScenariosFailed": 1,
  "Result": "Failed",
  "Scenarios": {
    "1": {
      "Name": "Minimise wildcards in Roles and Cluster Roles",
      "Result": "Passed",
      "Tags": [
        "@k-gen",
        "@probes/kubernetes/general",
        "@k-gen-001"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Validated that the k8s cluster specified in '/root/.kube/config' is deployed by checking the '' context; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "iInspectTheThatAreConfigured",
          "Description": "Retrieving instance roles; Stored any retrieved wildcard roles in state for following steps; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "PodState": {
              "PodName": "",
              "CreationError": null,
              "ExpectedReason": null,
              "CommandExitCode": 0
            }
          }
        },
        "3": {
          "Name": "iShouldOnlyFindWildcardsInKnownAndAuthorisedConfigurations",
          "Description": "Removing known entries from the cluster roles; Validate that no unexpected wildcards were found; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "PodState": {
              "PodName": "",
              "CreationError": null,
              "ExpectedReason": null,
              "CommandExitCode": 0
            }
          }
        }
      }
    },
    "2": {
      "Name": "Minimise wildcards in Roles and Cluster Roles",
      "Result": "Passed",
      "Tags": [
        "@k-gen",
        "@probes/kubernetes/general",
        "@k-gen-001"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Validated that the k8s cluster specified in '/root/.kube/config' is deployed by checking the '' context; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "iInspectTheThatAreConfigured",
          "Description": "Retrieving instance cluster roles; Stored any retrieved wildcard roles in state for following steps; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "PodState": {
              "PodName": "",
              "CreationError": null,
              "ExpectedReason": null,
              "CommandExitCode": 0
            }
          }
        },
        "3": {
          "Name": "iShouldOnlyFindWildcardsInKnownAndAuthorisedConfigurations",
          "Description": "Removing known entries from the cluster roles; Validate that no unexpected wildcards were found; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "PodState": {
              "PodName": "",
              "CreationError": null,
              "ExpectedReason": null,
              "CommandExitCode": 0
            }
          }
        }
      }
    },
    "3": {
      "Name": "Ensure Security Contexts are enforced",
      "Result": "Failed",
      "Tags": [
        "@k-gen",
        "@probes/kubernetes/general",
        "@k-gen-002"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Validated that the k8s cluster specified in '/root/.kube/config' is deployed by checking the '' context; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "iAttemptToCreateADeploymentWhichDoesNotHaveASecurityContext",
          "Description": "Create unique pod name; Attempt to deploy ProbeImage without a security context; Ensure failure to deploy returns 'podcreation-error: undefined'; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "Pod": {
              "metadata": {
                "name": "probr-general-220221-103648-7",
                "namespace": "probr-general-test-ns",
                "selfLink": "/api/v1/namespaces/probr-general-test-ns/pods/probr-general-220221-103648-7",
                "uid": "cbee56a9-96d5-4e9f-9ae5-fc3e1ee502ed",
                "resourceVersion": "1308940",
                "creationTimestamp": "2021-02-22T15:36:47Z",
                "labels": {
                  "app": "demo"
                },
                "annotations": {
                  "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                },
                "managedFields": [
                  {
                    "manager": "probr.exe",
                    "operation": "Update",
                    "apiVersion": "v1",
                    "time": "2021-02-22T15:36:47Z",
                    "fieldsType": "FieldsV1",
                    "fieldsV1": {
                      "f:metadata": {
                        "f:annotations": {
                          ".": {},
                          "f:seccomp.security.alpha.kubernetes.io/pod": {}
                        },
                        "f:labels": {
                          ".": {},
                          "f:app": {}
                        }
                      },
                      "f:spec": {
                        "f:containers": {
                          "k:{\"name\":\"probr-general\"}": {
                            ".": {},
                            "f:command": {},
                            "f:image": {},
                            "f:imagePullPolicy": {},
                            "f:name": {},
                            "f:resources": {},
                            "f:securityContext": {
                              ".": {},
                              "f:allowPrivilegeEscalation": {},
                              "f:capabilities": {
                                ".": {},
                                "f:drop": {}
                              },
                              "f:privileged": {}
                            },
                            "f:terminationMessagePath": {},
                            "f:terminationMessagePolicy": {}
                          }
                        },
                        "f:dnsPolicy": {},
                        "f:enableServiceLinks": {},
                        "f:restartPolicy": {},
                        "f:schedulerName": {},
                        "f:securityContext": {
                          ".": {},
                          "f:fsGroup": {},
                          "f:runAsGroup": {},
                          "f:runAsUser": {},
                          "f:supplementalGroups": {}
                        },
                        "f:terminationGracePeriodSeconds": {}
                      }
                    }
                  }
                ]
              },
              "spec": {
                "volumes": [
                  {
                    "name": "default-token-lc5lg",
                    "secret": {
                      "secretName": "default-token-lc5lg",
                      "defaultMode": 420
                    }
                  }
                ],
                "containers": [
                  {
                    "name": "probr-general",
                    "image": "citihubprod.azurecr.io/citihub/probr-probe",
                    "command": [
                      "sleep",
                      "3600"
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "default-token-lc5lg",
                        "readOnly": true,
                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                      }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "capabilities": {
                        "drop": [
                          "NET_RAW"
                        ]
                      },
                      "privileged": false,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "securityContext": {
                  "runAsUser": 1000,
                  "runAsGroup": 3000,
                  "supplementalGroups": [
                    1
                  ],
                  "fsGroup": 2000
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                  {
                    "key": "node.kubernetes.io/not-ready",
                    "operator": "Exists",
                    "effect": "NoExecute",
                    "tolerationSeconds": 300
                  },
                  {
                    "key": "node.kubernetes.io/unreachable",
                    "operator": "Exists",
                    "effect": "NoExecute",
                    "tolerationSeconds": 300
                  }
                ],
                "priority": 0,
                "enableServiceLinks": true
              },
              "status": {
                "phase": "Pending",
                "qosClass": "BestEffort"
              }
            },
            "PodAudit": {
              "PodName": "probr-general-220221-103648-7",
              "Namespace": "probr-general-test-ns",
              "ContainerName": "probr-general",
              "Image": "citihubprod.azurecr.io/citihub/probr-probe",
              "SecurityContext": null
            }
          }
        },
        "3": {
          "Name": "theDeploymentIsRejected",
          "Description": "Validates that an expected creation error occurred in the previous step; ",
          "Result": "Failed",
          "Error": "pod probr-general-220221-103648-7 was created successfully. Test fail.",
          "Payload": {
            "PodState": {
              "PodName": "probr-general-220221-103648-7",
              "CreationError": null,
              "ExpectedReason": null,
              "CommandExitCode": 0
            }
          }
        }
      }
    },
    "4": {
      "Name": "Ensure Kubernetes Web UI is disabled",
      "Result": "Passed",
      "Tags": [
        "@k-gen",
        "@probes/kubernetes/general",
        "@k-gen-003"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Validated that the k8s cluster specified in '/root/.kube/config' is deployed by checking the '' context; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "theKubernetesWebUIIsDisabled",
          "Description": "Attempts to find a pod in the 'kube-system' namespace with the prefix 'kubernetes-dashboard'; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "PodState": {
              "PodName": "",
              "CreationError": null,
              "ExpectedReason": null,
              "CommandExitCode": 0
            },
            "PodName": "",
            "PodDashBoardName": ""
          }
        },
        "3": {
          "Name": "iShouldNotBeAbleToAccessTheKubernetesWebUI",
          "Description": "PENDING IMPLEMENTATION",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    }
  }
}