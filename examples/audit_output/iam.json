{
  "Name": "iam",
  "PodsDestroyed": 3,
  "ScenariosAttempted": 4,
  "ScenariosSucceeded": 4,
  "ScenariosFailed": 0,
  "Result": "Success",
  "Scenarios": {
    "1": {
      "Name": "Prevent cross namespace Azure Identities",
      "Result": "Passed",
      "Tags": [
        "@k-iam",
        "@probes/kubernetes/iam",
        "@k-iam-001"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Validated that the k8s cluster specified in '/root/.kube/config' is deployed by checking the '' context; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "aNamedAzureIdentityBindingExistsInNamedNS",
          "Description": "Check whether 'probr-aib' Azure Identity Binding exists in namespace 'default'; ",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "iCreateASimplePodInNamespaceAssignedWithThatAzureIdentityBinding",
          "Description": "Load pod spec from 'iam-azi-test-aib-curl.yaml'; Create simple pod in the probr namespace assigned with the azure identity binding probr-aib",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "PodState": {
              "PodName": "iam-test-pod-220221-101919-12",
              "CreationError": null,
              "ExpectedReason": null,
              "CommandExitCode": 0
            }
          }
        },
        "4": {
          "Name": "thePodIsDeployedSuccessfully",
          "Description": "Validate that the pod was deployed successfully; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "PodState": {
              "PodName": "iam-test-pod-220221-101919-12",
              "CreationError": null,
              "ExpectedReason": null,
              "CommandExitCode": 0
            }
          }
        },
        "5": {
          "Name": "anAttemptToObtainAnAccessTokenFromThatPodShould",
          "Description": "Get access token for 'iam-test-pod-220221-101919-12' pod, expected result is 'Fail'; Validate no token was found; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "PodState": {
              "PodName": "iam-test-pod-220221-101919-12",
              "CreationError": null,
              "ExpectedReason": null,
              "CommandExitCode": 0
            }
          }
        }
      }
    },
    "2": {
      "Name": "Prevent cross namespace Azure Identities",
      "Result": "Passed",
      "Tags": [
        "@k-iam",
        "@probes/kubernetes/iam",
        "@k-iam-001"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Validated that the k8s cluster specified in '/root/.kube/config' is deployed by checking the '' context; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "aNamedAzureIdentityBindingExistsInNamedNS",
          "Description": "Check whether 'probr-aib' Azure Identity Binding exists in namespace 'default'; ",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        },
        "3": {
          "Name": "iCreateASimplePodInNamespaceAssignedWithThatAzureIdentityBinding",
          "Description": "Load pod spec from 'iam-azi-test-aib-curl.yaml'; Create simple pod in the default namespace assigned with the azure identity binding probr-aib",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "PodState": {
              "PodName": "iam-test-pod-220221-102043-77",
              "CreationError": null,
              "ExpectedReason": null,
              "CommandExitCode": 0
            }
          }
        },
        "4": {
          "Name": "thePodIsDeployedSuccessfully",
          "Description": "Validate that the pod was deployed successfully; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "PodState": {
              "PodName": "iam-test-pod-220221-102043-77",
              "CreationError": null,
              "ExpectedReason": null,
              "CommandExitCode": 0
            }
          }
        },
        "5": {
          "Name": "anAttemptToObtainAnAccessTokenFromThatPodShould",
          "Description": "Get access token for 'iam-test-pod-220221-102043-77' pod, expected result is 'Succeed'; Validate token was found; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "PodState": {
              "PodName": "iam-test-pod-220221-102043-77",
              "CreationError": null,
              "ExpectedReason": null,
              "CommandExitCode": 0
            }
          }
        }
      }
    },
    "3": {
      "Name": "Prevent cross namespace Azure Identity Bindings",
      "Result": "Passed",
      "Tags": [
        "@k-iam",
        "@probes/kubernetes/iam",
        "@k-iam-002"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Validated that the k8s cluster specified in '/root/.kube/config' is deployed by checking the '' context; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "aNamedAzureIdentityExistsInNamedNS",
          "Description": "Validate that 'probr-probe' identity is found in 'default' namespace; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "PodState": {
              "PodName": "",
              "CreationError": null,
              "ExpectedReason": null,
              "CommandExitCode": 0
            }
          }
        },
        "3": {
          "Name": "iCreateAnAzureIdentityBindingCalledInANondefaultNamespace",
          "Description": "Attempt to create 'probr-aib' binding in the Probr namespace bound to 'probr-probe' identity; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "PodState": {
              "PodName": "",
              "CreationError": null,
              "ExpectedReason": null,
              "CommandExitCode": 0
            }
          }
        },
        "4": {
          "Name": "iDeployAPodAssignedWithTheAzureIdentityBindingIntoTheProbrNameSpace",
          "Description": "Get pod spec from 'iam-azi-test-aib-curl.yaml'; Attempt to deploy pod with 'probr-aib' binding to the Probr namespace; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "PodState": {
              "PodName": "iam-test-pod-220221-102207-27",
              "CreationError": null,
              "ExpectedReason": null,
              "CommandExitCode": 0
            },
            "PodName": "iam-test-pod-220221-102207-27",
            "ProbrNameSpace": "probr-general-test-ns"
          }
        },
        "5": {
          "Name": "thePodIsDeployedSuccessfully",
          "Description": "Validate that the pod was deployed successfully; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "PodState": {
              "PodName": "iam-test-pod-220221-102207-27",
              "CreationError": null,
              "ExpectedReason": null,
              "CommandExitCode": 0
            }
          }
        },
        "6": {
          "Name": "anAttemptToObtainAnAccessTokenFromThatPodShould",
          "Description": "Get access token for 'iam-test-pod-220221-102207-27' pod, expected result is 'Fail'; Validate no token was found; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "PodState": {
              "PodName": "iam-test-pod-220221-102207-27",
              "CreationError": null,
              "ExpectedReason": null,
              "CommandExitCode": 0
            }
          }
        }
      }
    },
    "4": {
      "Name": "Prevent access to AKS credentials via Azure Identity Components",
      "Result": "Passed",
      "Tags": [
        "@k-iam",
        "@probes/kubernetes/iam",
        "@k-iam-003"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Validated that the k8s cluster specified in '/root/.kube/config' is deployed by checking the '' context; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "theClusterHasManagedIdentityComponentsDeployed",
          "Description": "Get pods from 'kube-system' namespace; Validate that Cluster has managed identity component deployed by checking whether a pod with 'mic-' prefix is found; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "PodState": {
              "PodName": "aad-pod-identity-mic-8664d59758-l8g57",
              "CreationError": null,
              "ExpectedReason": null,
              "CommandExitCode": 0
            }
          }
        },
        "3": {
          "Name": "iExecuteTheCommandAgainstTheMICPod",
          "Description": "Attempt to execute command 'cat /etc/kubernetes/azure.json'; Store '126' exit code in scenario state; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "PodState": {
              "PodName": "aad-pod-identity-mic-8664d59758-l8g57",
              "CreationError": null,
              "ExpectedReason": null,
              "CommandExitCode": 126
            }
          }
        },
        "4": {
          "Name": "kubernetesShouldPreventMeFromRunningTheCommand",
          "Description": "Examine scenario state to ensure that verification command exit code was not 0; ",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "PodState": {
              "PodName": "aad-pod-identity-mic-8664d59758-l8g57",
              "CreationError": null,
              "ExpectedReason": null,
              "CommandExitCode": 126
            }
          }
        }
      }
    }
  }
}