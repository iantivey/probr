{
  "Name": "container_registry_access",
  "PodsDestroyed": 0,
  "ScenariosAttempted": 5,
  "ScenariosSucceeded": 3,
  "ScenariosFailed": 2,
  "Result": "Failed",
  "Scenarios": {
    "1": {
      "Name": "Ensure the cluster service account has read only access to the container registry",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@csp/all",
        "@control/family/container_registry_access",
        "@standard/cis/6.1",
        "@control/type/preventative",
        "@standard/cis/6.1.3"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "iAmAuthorisedToPullFromAContainerRegistry",
          "Description": "Creates a new pod using an image from citihubprod.azurecr.io. Passes if image successfully pulls and pod is built.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "Pod": {
              "metadata": {
                "name": "ca-test-citihubprod-azurecr-io-161120-214300-45",
                "namespace": "probr-container-access-test-ns",
                "selfLink": "/api/v1/namespaces/probr-container-access-test-ns/pods/ca-test-citihubprod-azurecr-io-161120-214300-45",
                "uid": "c1382109-628a-4751-8f2c-114fbaa30a3a",
                "resourceVersion": "30190",
                "creationTimestamp": "2020-11-16T21:43:01Z",
                "labels": {
                  "app": "demo"
                },
                "annotations": {
                  "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                }
              },
              "spec": {
                "volumes": [
                  {
                    "name": "default-token-nskvp",
                    "secret": {
                      "secretName": "default-token-nskvp",
                      "defaultMode": 420
                    }
                  }
                ],
                "containers": [
                  {
                    "name": "container-access-test",
                    "image": "citihubprod.azurecr.io/citihub/probr-probe:latest",
                    "command": [
                      "sleep",
                      "3600"
                    ],
                    "resources": {},
                    "volumeMounts": [
                      {
                        "name": "default-token-nskvp",
                        "readOnly": true,
                        "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                      }
                    ],
                    "terminationMessagePath": "/dev/termination-log",
                    "terminationMessagePolicy": "File",
                    "imagePullPolicy": "IfNotPresent",
                    "securityContext": {
                      "privileged": false,
                      "allowPrivilegeEscalation": false
                    }
                  }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "securityContext": {
                  "runAsUser": 1000,
                  "runAsGroup": 3000,
                  "supplementalGroups": [
                    1
                  ],
                  "fsGroup": 2000
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                  {
                    "key": "node.kubernetes.io/not-ready",
                    "operator": "Exists",
                    "effect": "NoExecute",
                    "tolerationSeconds": 300
                  },
                  {
                    "key": "node.kubernetes.io/unreachable",
                    "operator": "Exists",
                    "effect": "NoExecute",
                    "tolerationSeconds": 300
                  }
                ],
                "priority": 0,
                "enableServiceLinks": true
              },
              "status": {
                "phase": "Pending",
                "qosClass": "BestEffort"
              }
            },
            "PodAudit": {
              "PodName": "ca-test-citihubprod-azurecr-io-161120-214300-45",
              "Namespace": "probr-general-test-ns",
              "ContainerName": "container-access-test",
              "Image": "citihubprod.azurecr.io/citihub/probr-probe:latest",
              "SecurityContext": null
            }
          }
        }
      }
    },
    "2": {
      "Name": "Ensure only authorised container registries are allowed",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@csp/all",
        "@control/family/container_registry_access",
        "@standard/cis/6.1",
        "@control/type/preventative",
        "@standard/cis/6.1.4"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "aUserAttemptsToDeployAContainerFrom",
          "Description": "Attempts to deploy a container from docker.io. Retains pod creation result in scenario state. Passes so long as user is authorized to deploy containers.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "Pod": null,
            "PodAudit": {
              "PodName": "ca-test-docker-io-161120-214303-13",
              "Namespace": "probr-general-test-ns",
              "ContainerName": "container-access-test",
              "Image": "docker.io/citihub/probr-probe:latest",
              "SecurityContext": null
            }
          }
        },
        "3": {
          "Name": "theDeploymentAttemptIs",
          "Description": "Asserts pod creation result in scenario state is denied.",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "3": {
      "Name": "Ensure only authorised container registries are allowed",
      "Result": "Passed",
      "Tags": [
        "@service/kubernetes",
        "@csp/all",
        "@control/family/container_registry_access",
        "@standard/cis/6.1",
        "@control/type/preventative",
        "@standard/cis/6.1.4"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "aUserAttemptsToDeployAContainerFrom",
          "Description": "Attempts to deploy a container from gcr.io. Retains pod creation result in scenario state. Passes so long as user is authorized to deploy containers.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "Pod": null,
            "PodAudit": {
              "PodName": "ca-test-gcr-io-161120-214303-26",
              "Namespace": "probr-general-test-ns",
              "ContainerName": "container-access-test",
              "Image": "gcr.io/citihub/probr-probe:latest",
              "SecurityContext": null
            }
          }
        },
        "3": {
          "Name": "theDeploymentAttemptIs",
          "Description": "Asserts pod creation result in scenario state is denied.",
          "Result": "Passed",
          "Error": "",
          "Payload": null
        }
      }
    },
    "4": {
      "Name": "Ensure only authorised container registries are allowed",
      "Result": "Failed",
      "Tags": [
        "@service/kubernetes",
        "@csp/all",
        "@control/family/container_registry_access",
        "@standard/cis/6.1",
        "@control/type/preventative",
        "@standard/cis/6.1.4"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "aUserAttemptsToDeployAContainerFrom",
          "Description": "Attempts to deploy a container from mcr.microsoft.com. Retains pod creation result in scenario state. Passes so long as user is authorized to deploy containers.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "Pod": null,
            "PodAudit": {
              "PodName": "ca-test-mcr-microsoft-com-161120-214303-83",
              "Namespace": "probr-general-test-ns",
              "ContainerName": "container-access-test",
              "Image": "mcr.microsoft.com/citihub/probr-probe:latest",
              "SecurityContext": null
            }
          }
        },
        "3": {
          "Name": "theDeploymentAttemptIs",
          "Description": "Asserts pod creation result in scenario state is allowed.",
          "Result": "Failed",
          "Error": "pod was not created - test failed: pod creation error: map[podcreation-error: psp-container-allowed-images:podcreation-error: psp-allowed-portrange] admission webhook \"validation.gatekeeper.sh\" denied the request: [denied by azurepolicy-container-allowed-images-d0318bd54c8157a6fe8c] Container image mcr.microsoft.com/citihub/probr-probe:latest for container container-access-test has not been allowed.",
          "Payload": null
        }
      }
    },
    "5": {
      "Name": "Ensure only authorised container registries are allowed",
      "Result": "Failed",
      "Tags": [
        "@service/kubernetes",
        "@csp/all",
        "@control/family/container_registry_access",
        "@standard/cis/6.1",
        "@control/type/preventative",
        "@standard/cis/6.1.4"
      ],
      "Steps": {
        "1": {
          "Name": "aKubernetesClusterIsDeployed",
          "Description": "Passes if Probr successfully connects to the specified cluster.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "KubeConfigPath": "/root/.kube/config",
            "KubeContext": ""
          }
        },
        "2": {
          "Name": "aUserAttemptsToDeployAContainerFrom",
          "Description": "Attempts to deploy a container from allowed-registry. Retains pod creation result in scenario state. Passes so long as user is authorized to deploy containers.",
          "Result": "Passed",
          "Error": "",
          "Payload": {
            "Pod": null,
            "PodAudit": {
              "PodName": "ca-test-allowed-registry-161120-214303-20",
              "Namespace": "probr-general-test-ns",
              "ContainerName": "container-access-test",
              "Image": "allowed-registry/citihub/probr-probe:latest",
              "SecurityContext": null
            }
          }
        },
        "3": {
          "Name": "theDeploymentAttemptIs",
          "Description": "Asserts pod creation result in scenario state is allowed.",
          "Result": "Failed",
          "Error": "pod was not created - test failed: pod creation error: map[podcreation-error: psp-container-allowed-images:podcreation-error: psp-allowed-portrange] admission webhook \"validation.gatekeeper.sh\" denied the request: [denied by azurepolicy-container-allowed-images-d0318bd54c8157a6fe8c] Container image allowed-registry/citihub/probr-probe:latest for container container-access-test has not been allowed.",
          "Payload": null
        }
      }
    }
  }
}